apiVersion: v1
kind: Secret
metadata:
  name: mcp-secrets
  namespace: mcp-servers
type: Opaque
stringData:
  GITHUB_PERSONAL_ACCESS_TOKEN: "YOUR_GITHUB_TOKEN"
  JIRA_API_TOKEN: "YOUR_JIRA_TOKEN"
  FRAPPE_API_KEY: "YOUR_FRAPPE_KEY"
  FRAPPE_API_SECRET: "YOUR_FRAPPE_SECRET"
  GOOGLE_API_KEY: "YOUR_GOOGLE_API_KEY"
  GOOGLE_SEARCH_ENGINE_ID: "YOUR_SEARCH_ENGINE_ID"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-config
  namespace: mcp-servers
data:
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "mcp_goals"
  POSTGRES_USER: "postgres"
  JIRA_BASE_URL: "https://clapgrow.atlassian.net"
  JIRA_EMAIL: "sourav@clapgrow.com"
  JIRA_PROJECT_KEY: "CGV2"
  FRAPPE_SITE_URL: "http://frappe-service:8005"
  GOAL_AGENT_MAX_WORKERS: "10"
  CACHE_ENABLED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memory-cache-server
  namespace: mcp-servers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: memory-cache-server
  template:
    metadata:
      labels:
        app: memory-cache-server
    spec:
      containers:
        - name: memory-cache-server
          image: mcp-servers/memory-cache:latest
          ports:
            - containerPort: 8001
              name: http
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: REDIS_PORT
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: memory-cache-service
  namespace: mcp-servers
spec:
  type: LoadBalancer
  selector:
    app: memory-cache-server
  ports:
    - port: 8001
      targetPort: 8001
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: goal-agent-server
  namespace: mcp-servers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: goal-agent-server
  template:
    metadata:
      labels:
        app: goal-agent-server
    spec:
      containers:
        - name: goal-agent-server
          image: mcp-servers/goal-agent:latest
          ports:
            - containerPort: 8002
              name: http
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: REDIS_PORT
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: GOAL_AGENT_MAX_WORKERS
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: GOAL_AGENT_MAX_WORKERS
            - name: CACHE_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: CACHE_ENABLED
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8002
            initialDelaySeconds: 15
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8002
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: goal-agent-service
  namespace: mcp-servers
spec:
  type: LoadBalancer
  selector:
    app: goal-agent-server
  ports:
    - port: 8002
      targetPort: 8002
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-server
  namespace: mcp-servers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: github-server
  template:
    metadata:
      labels:
        app: github-server
    spec:
      containers:
        - name: github-server
          image: mcp-servers/github:latest
          ports:
            - containerPort: 8003
              name: http
          env:
            - name: GITHUB_PERSONAL_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: GITHUB_PERSONAL_ACCESS_TOKEN
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8003
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8003
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: github-service
  namespace: mcp-servers
spec:
  type: LoadBalancer
  selector:
    app: github-server
  ports:
    - port: 8003
      targetPort: 8003
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jira-server
  namespace: mcp-servers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jira-server
  template:
    metadata:
      labels:
        app: jira-server
    spec:
      containers:
        - name: jira-server
          image: mcp-servers/jira:latest
          ports:
            - containerPort: 8004
              name: http
          env:
            - name: JIRA_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: JIRA_BASE_URL
            - name: JIRA_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: JIRA_EMAIL
            - name: JIRA_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: JIRA_API_TOKEN
            - name: JIRA_PROJECT_KEY
              valueFrom:
                configMapKeyRef:
                  name: mcp-config
                  key: JIRA_PROJECT_KEY
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8004
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8004
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: jira-service
  namespace: mcp-servers
spec:
  type: LoadBalancer
  selector:
    app: jira-server
  ports:
    - port: 8004
      targetPort: 8004
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: internet-server
  namespace: mcp-servers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: internet-server
  template:
    metadata:
      labels:
        app: internet-server
    spec:
      containers:
        - name: internet-server
          image: mcp-servers/internet:latest
          ports:
            - containerPort: 8005
              name: http
          env:
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: GOOGLE_API_KEY
            - name: GOOGLE_SEARCH_ENGINE_ID
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: GOOGLE_SEARCH_ENGINE_ID
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8005
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8005
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: internet-service
  namespace: mcp-servers
spec:
  type: LoadBalancer
  selector:
    app: internet-server
  ports:
    - port: 8005
      targetPort: 8005
      protocol: TCP
