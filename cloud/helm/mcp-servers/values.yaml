# Default values for mcp-servers Helm chart

# Global settings
global:
  imageRegistry: mcp-servers
  imageTag: latest
  imagePullPolicy: IfNotPresent

# Namespace
namespace:
  create: true
  name: mcp-servers

# PostgreSQL configuration
postgresql:
  enabled: true
  image: postgres:15-alpine
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 1000m
  persistence:
    enabled: true
    size: 20Gi
    storageClass: standard
  auth:
    database: mcp_goals
    username: postgres
    password: changeme-secure-password # Change in production!
  service:
    type: ClusterIP
    port: 5432

# Redis configuration
redis:
  enabled: true
  image: redis:7-alpine
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m
  config:
    maxmemory: "256mb"
    maxmemoryPolicy: "allkeys-lru"
  service:
    type: ClusterIP
    port: 6379

# MCP Servers configuration
servers:
  # Memory Cache Server
  memoryCache:
    enabled: true
    replicas: 2
    image:
      repository: mcp-servers/memory-cache
      tag: latest
    service:
      type: LoadBalancer
      port: 8001
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 500m
    env:
      REDIS_HOST: redis-service
      REDIS_PORT: "6379"

  # Goal Agent Server
  goalAgent:
    enabled: true
    replicas: 2
    image:
      repository: mcp-servers/goal-agent
      tag: latest
    service:
      type: LoadBalancer
      port: 8002
    resources:
      requests:
        memory: 256Mi
        cpu: 200m
      limits:
        memory: 512Mi
        cpu: 1000m
    env:
      REDIS_HOST: redis-service
      REDIS_PORT: "6379"
      POSTGRES_HOST: postgres-service
      POSTGRES_PORT: "5432"
      POSTGRES_DB: mcp_goals
      POSTGRES_USER: postgres
      GOAL_AGENT_MAX_WORKERS: "10"
      CACHE_ENABLED: "true"

  # GitHub Server
  github:
    enabled: true
    replicas: 2
    image:
      repository: mcp-servers/github
      tag: latest
    service:
      type: LoadBalancer
      port: 8003
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 500m
    # Set secrets in secrets.yaml

  # Jira Server
  jira:
    enabled: true
    replicas: 2
    image:
      repository: mcp-servers/jira
      tag: latest
    service:
      type: LoadBalancer
      port: 8004
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 500m
    env:
      JIRA_BASE_URL: "https://clapgrow.atlassian.net"
      JIRA_EMAIL: "sourav@clapgrow.com"
      JIRA_PROJECT_KEY: "CGV2"

  # Internet Server
  internet:
    enabled: true
    replicas: 2
    image:
      repository: mcp-servers/internet
      tag: latest
    service:
      type: LoadBalancer
      port: 8005
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
      limits:
        memory: 256Mi
        cpu: 500m

# Secrets (override in your secrets.yaml file)
secrets:
  githubToken: "YOUR_GITHUB_TOKEN"
  jiraApiToken: "YOUR_JIRA_TOKEN"
  frappeApiKey: "YOUR_FRAPPE_KEY"
  frappeApiSecret: "YOUR_FRAPPE_SECRET"
  googleApiKey: "YOUR_GOOGLE_API_KEY"
  googleSearchEngineId: "YOUR_SEARCH_ENGINE_ID"
  postgresPassword: "changeme-secure-password"

# Ingress configuration (optional)
ingress:
  enabled: false
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: mcp.frappewizard.com
      paths:
        - path: /memory-cache
          service: memory-cache-service
          port: 8001
        - path: /goal-agent
          service: goal-agent-service
          port: 8002
        - path: /github
          service: github-service
          port: 8003
        - path: /jira
          service: jira-service
          port: 8004
        - path: /internet
          service: internet-service
          port: 8005
  tls:
    - secretName: mcp-tls
      hosts:
        - mcp.frappewizard.com

# Autoscaling (optional)
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Monitoring
monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
