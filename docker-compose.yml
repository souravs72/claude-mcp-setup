version: "3.8"

services:
  # PostgreSQL Database - Primary persistence for Goal Agent
  postgres:
    image: postgres:15-alpine
    container_name: mcp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mcp_goals
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mcp_secure_password
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "5433:5432" # Using 5433 on host to avoid conflicts with local PostgreSQL
    volumes:
      # Persist data outside container
      - postgres_data:/var/lib/postgresql/data
      # Optional: initialization scripts
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mcp-network

  # Redis Cache - Optional caching layer (5-minute TTL)
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly no --save ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - mcp-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mcp-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mcp.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - mcp-network
    profiles:
      - tools # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  mcp-network:
    driver: bridge
