[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-servers"
version = "2.3.0"
description = "Production-ready MCP servers for Frappe, GitHub, Jira, Internet, Goal Management, and Memory Cache"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Sourav Singh"},
]
keywords = ["mcp", "frappe", "github", "jira", "cache", "goal-agent"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.6.0,<2.10.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "psutil>=5.9.0",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
]

[project.optional-dependencies]
# Individual server dependencies
github = ["PyGithub>=2.1.0"]
redis = ["redis>=5.0.0"]
monitoring = ["psutil>=5.9.0", "colorlog>=6.7.0"]

# Combined installations
all = [
    "PyGithub>=2.1.0",
    "redis>=5.0.0",
    "psutil>=5.9.0",
    "colorlog>=6.7.0",
]

# Development dependencies
dev = [
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "isort>=5.13.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
]

[project.scripts]
frappe-server = "servers.frappe_server:main"
github-server = "servers.github_server:main"
jira-server = "servers.jira_server:main"
internet-server = "servers.internet_server:main"
goal-agent-server = "servers.goal_agent_server:main"
cache-server = "servers.memory_cache_server:main"
dashboard-server = "servers.dashboard_server:main"
mcpctl = "mcpctl:main"

[tool.setuptools]
packages = ["servers"]
py-modules = ["mcpctl"]

[tool.setuptools.package-data]
servers = ["py.typed"]

[tool.mypy]
python_version = "3.10"
strict = false
warn_unused_ignores = true
warn_return_any = false
warn_redundant_casts = false
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_calls = false
disallow_subclassing_any = false
no_implicit_optional = true
exclude = [
    "tests/",
    "venv/",
    "build/",
    "dist/",
    "scripts/",
    "test_servers.py",
    "test_websocket.py",
    "servers/dashboard_server.py",
    "servers/goal_agent_server.py",
    "servers/database.py",
    "servers/jira_server.py",
    "servers/internet_server.py",
    "servers/github_server.py",
    "servers/file_server.py",
    "servers/bash_server.py",
    "scripts/test_server_startup.py",
]

# Allow third-party libraries without type stubs
[[tool.mypy.overrides]]
module = [
    "redis.*",
    "github.*",
    "mcp.*",
    "mcp.server.*",
    "psutil.*",
    "colorlog.*",
    "dotenv.*",
    "sqlalchemy.*",
    "fastapi.*",
    "uvicorn.*",
    "pydantic.*",
    "websockets.*",
    "click.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=servers",
    "--cov-report=term-missing",
]
