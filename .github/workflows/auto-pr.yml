name: Auto PR from dev to main

on:
  push:
    branches: [dev]

concurrency:
  group: auto-pr-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.MY_REPO_TOKEN }}
          fetch-depth: 0

      - name: Create Pull Request
        run: |
          # Debug: Show available branches
          echo "Available branches:"
          git branch -a

          # Fetch main branch to a temporary reference
          git fetch origin main:refs/remotes/origin/main

          # Debug: Verify branches exist
          echo "Checking if main and dev branches exist:"
          git show-ref refs/remotes/origin/main refs/heads/dev

          # Check if there are commits to merge (compare remote main with local dev)
          COMMITS_AHEAD=$(git rev-list --count refs/remotes/origin/main..dev)

          if [ "$COMMITS_AHEAD" -eq 0 ]; then
            echo "No commits to merge - dev is up to date with main"
            echo "Skipping PR creation"
            exit 0
          fi

          echo "Found $COMMITS_AHEAD commits ahead of main"

          # Check if PR already exists
          EXISTING_PR=$(gh pr list --base main --head dev --json number --jq '.[0].number' 2>/dev/null || echo "")

          if [ -z "$EXISTING_PR" ] || [ "$EXISTING_PR" = "null" ]; then
            echo "Creating new PR from dev to main..."
            gh pr create \
              --base main \
              --head dev \
              --title "Merge dev to main - ${{ github.event.head_commit.message }}" \
              --body "## Changes from dev branch

          This PR was automatically created from the dev branch.

          **Commit:** ${{ github.event.head_commit.message }}
          **Author:** ${{ github.event.head_commit.author.name }}
          **Date:** ${{ github.event.head_commit.timestamp }}
          **Commits ahead:** $COMMITS_AHEAD

          ### What's Changed
          - Latest updates from dev branch
          - Ready for review and merge

          ### Checklist
          - [ ] Code reviewed
          - [ ] Tests passing
          - [ ] Documentation updated"
          else
            echo "PR #$EXISTING_PR already exists from dev to main"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.MY_REPO_TOKEN }}
